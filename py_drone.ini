[DEFAULT]
host_name = http://127.0.0.1:5000
base = ${host_name}/id/
debug = True
cors = False
port = 5000
yasgui_heading = LANDRS Drone SPARQL Interface
logging_level = 20
logging_file = landrs.log

[DRONE]
drone_uuid = MjlmNmVmZTAtNGU1OS00N2I4LWI3MzYtODZkMDQ0MTRiNzcxCg==
input_shape = Drone_shape
graph_boundary = graph_boundary
constraint_shape = Flight_constraint

[GRAPH]
name = landrs_test
db_location = db/${name}
file = ../landrsOntTest/
file_format = ttl
file_reload = False
pyshacl = False
shacl_filename = *shape.${file_format}
shacl_constraint_filename = *shapes.${file_format}
ontology_filename = ontology.${file_format}
flight_shacl_filename = ttl/

[MAVLINK]
observation_collection = http://127.0.0.1:5000/id/Q2i14zXRSlSTlJekOXM3Zw
address = tcp:127.0.0.1:5761
rate = 10
list_ports = True
dataset = http://127.0.0.1:5000/id/5Ya7uRbVTl-fXi4A-XYUSw
sensor = http://127.0.0.1:5000/id/YaUJ-iY3TM-xDK5pSj0gbg

[FLIGHT]
this_uav = ${DEFAULT:base}${DRONE:drone_uuid}
this_uav_mode = SUBSTITUTE
mission_file = ../ardupilot/Tools/autotest/ArduPlane_Tests/Mission/
mission_file_mode = FILES
geometry = mission_file
geometry_mode = GEOMETRY
flight = ad
flight_collection = the_observation_collection
flight_dataset = the_dataset
name_substutute = flight
flight_collection_suffix = ,flight_collection
input_shape = Flight_shape
constraint_shape = Flight_constraint
flight_store_shape = Store_shape
graph_boundary = graph_boundary
flight_store_shape_end = Store_shape_end
flight_sensor_value = sensor_quantity
flight_sensor = sensor
flight_sensor_label = sensor_label
flight_geo_fix = sensor_quantity_geo_fix
flight_time_stamp = startTime
flight_time_stamp_end = endTime

